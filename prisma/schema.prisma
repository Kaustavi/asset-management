generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// For mongo use atlas db 
// datasource db {
//   provider = "mongodb"
//   url      = env("DATABASE_URL")
// }

model Employee {
  id            String           @id @default(uuid())
  email         String           @unique
  password      String
  phone_no      String
  name          String
  team          Teams
  status        Boolean
  access_token String?
  assigned_item HardwareSystem[] @relation(name: "assignedItem")
  records       Records?         @relation(name: "assignment-records")
  created_at    DateTime?        @default(now())
  updated_at    DateTime? @updatedAt
}

model HardwareSystem {
  id             String        @id @default(uuid())
  name           String
  descriptions   String
  type           HardwareTypes
  serial_num     String        @unique
  assign_id      String        @unique
  assignee       Employee      @relation(name: "assignedItem", fields: [assignee_by_id], references: [id])
  assignee_by_id String
  created_at     DateTime?
  updated_at     DateTime?
  records        Records?      @relation(name: "records")
}

model Records {
  id             String         @id @default(uuid())
  assignee       Employee       @relation(name: "assignment-records", fields: [assignee_by_id], references: [id])
  assignee_by_id String         @unique
  HardwareSystem HardwareSystem @relation(name: "records", fields: [system_id], references: [id])
  system_id      String         @unique
}

enum HardwareTypes {
  MOBILE
  WATCH
  IMAC
  MAC_MINI
  LAPTOP
}

enum Teams {
  FRONTEND
  BACKEND
  QA
  MARKETING
  DESIGN
}
